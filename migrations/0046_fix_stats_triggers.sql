-- Migration number: 0043 	 2025-04-16T06:14:45.336Z 
DROP TRIGGER IF EXISTS update_stats_after_issue_insert;   
DROP TRIGGER IF EXISTS update_stats_after_issue_update;   
DROP TRIGGER IF EXISTS update_stats_after_issue_delete;   

-- there's a bug in D1 with newlines in create trigger.  This is a workaround. https://github.com/cloudflare/workers-sdk/issues/4998
CREATE TRIGGER update_stats_after_issue_insert AFTER INSERT ON issue FOR EACH ROW BEGIN UPDATE crag SET stats_active_issue_count = (SELECT COUNT(*) FROM issue JOIN route ON issue.route_id = route.id  JOIN sector ON route.sector_id = sector.id  WHERE sector.crag_id = crag.id AND lower(issue.status) NOT IN ('archived', 'closed', 'completed')), stats_public_issue_count = (SELECT COUNT(*) FROM issue JOIN route ON issue.route_id = route.id JOIN sector ON route.sector_id = sector.id  WHERE sector.crag_id = crag.id AND lower(issue.status) NOT IN ('in moderation', 'archived', 'closed', 'completed')), stats_issue_flagged = ( SELECT COUNT(*) FROM issue JOIN route ON issue.route_id = route.id JOIN sector ON route.sector_id = sector.id WHERE sector.crag_id = crag.id AND lower(issue.status) NOT IN ('archived', 'closed', 'completed')  AND issue.is_flagged = 1) WHERE crag.id = (SELECT crag_id FROM sector JOIN route ON sector.id = route.sector_id WHERE route.id = NEW.route_id ); END; 
CREATE TRIGGER update_stats_after_issue_update AFTER UPDATE ON issue FOR EACH ROW BEGIN UPDATE crag SET stats_active_issue_count = (SELECT COUNT(*) FROM issue JOIN route ON issue.route_id = route.id  JOIN sector ON route.sector_id = sector.id  WHERE sector.crag_id = crag.id AND lower(issue.status) NOT IN ('archived', 'closed', 'completed')), stats_public_issue_count = (SELECT COUNT(*) FROM issue JOIN route ON issue.route_id = route.id JOIN sector ON route.sector_id = sector.id  WHERE sector.crag_id = crag.id AND lower(issue.status) NOT IN ('in moderation', 'archived', 'closed', 'completed')), stats_issue_flagged = ( SELECT COUNT(*) FROM issue JOIN route ON issue.route_id = route.id JOIN sector ON route.sector_id = sector.id WHERE sector.crag_id = crag.id AND lower(issue.status) NOT IN ('archived', 'closed', 'completed')  AND issue.is_flagged = 1) WHERE crag.id IN ( SELECT crag_id FROM sector JOIN route ON sector.id = route.sector_id  WHERE route.id = NEW.route_id OR route.id = OLD.route_id ); END;  
CREATE TRIGGER update_stats_after_issue_delete AFTER UPDATE ON issue FOR EACH ROW BEGIN UPDATE crag SET stats_active_issue_count = (SELECT COUNT(*) FROM issue JOIN route ON issue.route_id = route.id  JOIN sector ON route.sector_id = sector.id  WHERE sector.crag_id = crag.id  AND lower(issue.status) NOT IN ('archived', 'closed', 'completed')), stats_public_issue_count = (  SELECT COUNT(*)   FROM issue JOIN route ON issue.route_id = route.id  JOIN sector ON route.sector_id = sector.id  WHERE sector.crag_id = crag.id  AND lower(issue.status) NOT IN ('in moderation', 'archived', 'closed', 'completed')), stats_issue_flagged = (  SELECT COUNT(*)   FROM issue JOIN route ON issue.route_id = route.id  JOIN sector ON route.sector_id = sector.id  WHERE sector.crag_id = crag.id  AND lower(issue.status) NOT IN ('archived', 'closed', 'completed')  AND issue.is_flagged = 1) WHERE crag.id = (SELECT crag_id FROM sector JOIN route ON sector.id = route.sector_id WHERE route.id = OLD.route_id); END; 
