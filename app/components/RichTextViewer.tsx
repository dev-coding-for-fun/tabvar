import { TypographyStylesProvider, Text } from "@mantine/core";

interface RichTextViewerProps {
  content: string;
  // We can add more props here later if needed (e.g., custom classNames, styles)
}

const HTML_TAG_REGEX = /<[a-z][\s\S]*>/i;

/**
 * Renders HTML content generated by a rich text editor (like Tiptap)
 * using Mantine's TypographyStylesProvider for consistent styling.
 */
export function RichTextViewer({ content }: RichTextViewerProps) {
  // Return null or an empty fragment if content is empty/nullish
  // to avoid rendering an empty div.
  if (!content) {
    return null;
  }

  // Check if the content likely contains HTML tags
  const isHtml = HTML_TAG_REGEX.test(content);

  if (isHtml) {
    // Render as HTML using TypographyStylesProvider
    return (
      <TypographyStylesProvider>
        <div dangerouslySetInnerHTML={{ __html: content }} />
      </TypographyStylesProvider>
    );
  } else {
    // Render as plain text, preserving line breaks and wrapping
    return (
      <Text style={{ whiteSpace: 'pre-wrap', fontSize: 'var(--mantine-font-size-sm)' }}>
        {content}
      </Text>
    );
  }
} 